





:class:`MeshObjectPlot`
=======================


.. py:class:: ansys.tools.visualization_interface.types.mesh_object_plot.MeshObjectPlot(custom_object: Any, mesh: Union[pyvista.PolyData, pyvista.MultiBlock, plotly.graph_objects.Mesh3d], actor: pyvista.Actor = None, edges: List[ansys.tools.visualization_interface.types.edge_plot.EdgePlot] = None, children: List[MeshObjectPlot] = None, parent: MeshObjectPlot = None)

   
   Relates a custom object with a mesh, provided by the consumer library.
















   ..
       !! processed by numpydoc !!


.. py:currentmodule:: MeshObjectPlot

Overview
--------

.. tab-set::



   .. tab-item:: Methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~add_child`
            - Set a child MeshObjectPlot to the current object.


   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~parent`
            - Get the parent MeshObjectPlot of the current object.
          * - :py:attr:`~mesh`
            - Mesh of the object in PyVista format.
          * - :py:attr:`~custom_object`
            - Custom object.
          * - :py:attr:`~actor`
            - PyVista actor of the object in the plotter.
          * - :py:attr:`~edges`
            - Edges of the object.
          * - :py:attr:`~name`
            - Name of the object.
          * - :py:attr:`~mesh_type`
            - Type of the mesh.







Import detail
-------------

.. code-block:: python

    from ansys.tools.visualization_interface.types.mesh_object_plot import MeshObjectPlot

Property detail
---------------

.. py:property:: parent
   :type: MeshObjectPlot


   
   Get the parent MeshObjectPlot of the current object.

   This method is used to set a parent MeshObjectPlot to the current object.
   It is useful when the custom object has a hierarchical structure, and
   the consumer library wants to relate the parent objects with their meshes.

   :Parameters:

       **parent** : :obj:`MeshObjectPlot`
           Parent MeshObjectPlot to be set.














   ..
       !! processed by numpydoc !!

.. py:property:: mesh
   :type: Union[pyvista.PolyData, pyvista.MultiBlock, plotly.graph_objects.Mesh3d]


   
   Mesh of the object in PyVista format.





   :Returns:

       :obj:`Union`\[:obj:`pv.PolyData`, :obj:`pv.MultiBlock`]
           Mesh of the object.











   ..
       !! processed by numpydoc !!

.. py:property:: custom_object
   :type: Any


   
   Custom object.





   :Returns:

       :obj:`Any`
           Custom object.











   ..
       !! processed by numpydoc !!

.. py:property:: actor
   :type: pyvista.Actor


   
   PyVista actor of the object in the plotter.





   :Returns:

       :obj:`pv.Actor`
           PyVista actor of the object.











   ..
       !! processed by numpydoc !!

.. py:property:: edges
   :type: List[ansys.tools.visualization_interface.types.edge_plot.EdgePlot]


   
   Edges of the object.





   :Returns:

       :obj:`List`\[:obj:`EdgePlot`]
           Edges of the object.











   ..
       !! processed by numpydoc !!

.. py:property:: name
   :type: str


   
   Name of the object.





   :Returns:

       :class:`python:str`
           Name of the object.











   ..
       !! processed by numpydoc !!

.. py:property:: mesh_type
   :type: Type


   
   Type of the mesh.





   :Returns:

       :obj:`type`
           Type of the mesh.











   ..
       !! processed by numpydoc !!




Method detail
-------------

.. py:method:: add_child(child: MeshObjectPlot)

   
   Set a child MeshObjectPlot to the current object.

   This method is used to set a child MeshObjectPlot to the current object.
   It is useful when the custom object has a hierarchical structure, and
   the consumer library wants to relate the child objects with their meshes.

   :Parameters:

       **child** : :obj:`MeshObjectPlot`
           Child MeshObjectPlot to be set.














   ..
       !! processed by numpydoc !!




